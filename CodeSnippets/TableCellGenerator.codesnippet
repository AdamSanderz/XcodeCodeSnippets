<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>implTableCellGenerator</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import ReactiveDataDisplayManager

final class &lt;#name#&gt;Generator {

    // MARK: - Events

    &lt;#events declarations#&gt;

    // MARK: - Properties

    private var model: &lt;#model type#&gt;

    // MARK: - Initializers

    init(model: &lt;#model type#&gt;) {
        self.model = model
    }

}

// MARK: - TableCellGenerator

extension &lt;#name#&gt;Generator: TableCellGenerator {
    
    var identifier: UITableViewCell.Type {
        return &lt;#cell type#&gt;.self
    }
    
    func generate(tableView: UITableView, for indexPath: IndexPath) -&gt; UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(
            withIdentifier: self.identifier.nameOfClass,
            for: indexPath
        ) as? &lt;#cell type#&gt; else {
            return UITableViewCell()
        }
        
        self.build(view: cell)
        
        return cell
    }
    
}

// MARK: - ViewBuilder

extension &lt;#name#&gt;Generator: ViewBuilder {
    
    func build(view: &lt;#cell type#&gt;) {
        &lt;#code for building cell#&gt;
    }
    
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>00B0F89D-1B09-46A7-A3C4-84495097BE12</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>Object that implements TableCellGenerator and ViewBuilder protocols</string>
	<key>IDECodeSnippetTitle</key>
	<string>TableCellGenerator</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
